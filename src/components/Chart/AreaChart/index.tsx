import { FC, useState, useRef, useEffect } from 'react'
import dynamic from 'next/dynamic'
import { ApexOptions } from 'apexcharts'
import { ChartZoomSelectionType } from '@/types'

const Chart = dynamic(() => import('react-apexcharts'), { ssr: false })

type Props = {
    height: string
    width: string
    range: ChartZoomSelectionType
}

const AreaChart: FC<Props> = ({
    height = '200',
    width = '100%',
    range = 'ALL',
}) => {
    const [series, setSeries] = useState<ApexOptions['series']>([
        {
            name: '',
            data: [
                [1327359600000, 30.95],

                [1327532400000, 31.18],
                [1327618800000, 31.05],

                [1327964400000, 30.95],
                [1328050800000, 31.24],
                [1328137200000, 31.29],
                [1328223600000, 31.85],

                [1328569200000, 32.28],

                [1328742000000, 33.65],
                [1328828400000, 34.21],
                [1329087600000, 35.35],
                [1329174000000, 36.44],
                [1329260400000, 37.46],
                [1329346800000, 38.86],
                [1329433200000, 39.75],

                [1329951600000, 40.97],
                [1330038000000, 41.41],
                [1330297200000, 42.27],

                [1330902000000, 43.22],
                [1330988400000, 44],
                [1331074800000, 45.41],
                [1331161200000, 46.05],
                [1331247600000, 45.64],
                [1331506800000, 44.56],

                [1332370800000, 43.71],
                [1332457200000, 42.81],
                [1332712800000, 41.4],
                [1332799200000, 40.63],
                [1332885600000, 39.46],
                [1332972000000, 38.48],
                [1333058400000, 37.31],

                [1333922400000, 36.22],
                [1334008800000, 35.61],
                [1334095200000, 34.01],
                [1334181600000, 33.55],
                [1334268000000, 33.18],
                [1334527200000, 32.84],
                [1334613600000, 33.84],

                [1335304800000, 33.13],
                [1335391200000, 34.26],
                [1335477600000, 35.58],
                [1335736800000, 36.55],
                [1335823200000, 37.77],
                [1335909600000, 36.76],
                [1335996000000, 35.32],
                [1336082400000, 34.61],
                [1336341600000, 33.52],

                [1336946400000, 32.23],
                [1337032800000, 32.33],
                [1337119200000, 32.36],

                [1337292000000, 31.31],

                [1337637600000, 32.01],
                [1337724000000, 32.18],

                [1338415200000, 31.05],

                [1338760800000, 30.31],
                [1338847200000, 30.7],

                [1339020000000, 31.32],

                [1339365600000, 31.13],

                [1339711200000, 32.39],
                [1339970400000, 32.63],

                [1340143200000, 31.99],

                [1340316000000, 31.57],

                [1340661600000, 31.07],

                [1340834400000, 31.17],

                [1341784800000, 30.43],

                [1342044000000, 30.14],
                [1342130400000, 30.65],
                [1342562400000, 31.43],

                [1342735200000, 31.38],
                [1342994400000, 30.64],

                [1343685600000, 30.88],
                [1343772000000, 30.69],
                [1343858400000, 30.58],
                [1343944800000, 32.02],
                [1344204000000, 32.14],

                [1344808800000, 32.27],
                [1344895200000, 32.1],
                [1344981600000, 32.91],

                [1345154400000, 33.8],

                [1345500000000, 33.75],

                [1345672800000, 33.5],
                [1345759200000, 32.26],

                [1346104800000, 32.06],

                [1346277600000, 31.46],

                [1346709600000, 31.43],

                [1346882400000, 32.79],

                [1347228000000, 32.13],

                [1347400800000, 32.42],
                [1347487200000, 32.81],

                [1347832800000, 33.41],
                [1347919200000, 32.57],

                [1348092000000, 34.53],

                [1348437600000, 33.41],
                [1348524000000, 32.9],

                [1348696800000, 32.8],
                [1348783200000, 32.44],
                [1349042400000, 32.62],

                [1349301600000, 32.68],

                [1349647200000, 32.23],
                [1349733600000, 31.68],

                [1349906400000, 31.78],
                [1349992800000, 31.94],
                [1350252000000, 32.33],

                [1350424800000, 33.44],
                [1350511200000, 33.48],

                [1350856800000, 33.49],
                [1350943200000, 34],
                [1351029600000, 35.36],

                [1351202400000, 36.01],
                [1351638000000, 37.02],

                [1351810800000, 38.39],
                [1352070000000, 39.24],
                [1352156400000, 40.39],
                [1352242800000, 39.47],
                [1352329200000, 38.98],
                [1352415600000, 37.9],
                [1352674800000, 36.7],
                [1352761200000, 35.54],
                [1352847600000, 34.23],
                [1352934000000, 33.64],
                [1353020400000, 32.65],
                [1353279600000, 32.92],

                [1353970800000, 33.18],
                [1354057200000, 33.88],

                [1354489200000, 34.7],

                [1354834800000, 35.48],
                [1355094000000, 35.75],
                [1355180400000, 35.54],
                [1355266800000, 35.96],
                [1355353200000, 35.53],
                [1355439600000, 37.56],
                [1355698800000, 37.42],
                [1355785200000, 37.49],
                [1355871600000, 38.09],

                [1356476400000, 37.55],
                [1356562800000, 37.3],
                [1356649200000, 36.9],

                [1357081200000, 38.34],
                [1357167600000, 37.75],

                [1357513200000, 37.94],
                [1357599600000, 38.14],

                [1357772400000, 38.62],
                [1357858800000, 38.09],
                [1358118000000, 38.16],

                [1358290800000, 37.88],
                [1358377200000, 37.73],
                [1358463600000, 37.98],
                [1358809200000, 37.95],
                [1358895600000, 38.25],
                [1358982000000, 38.1],
                [1359068400000, 38.32],

                [1359414000000, 38.52],
                [1359500400000, 37.94],
                [1359586800000, 37.83],
                [1359673200000, 38.34],
                [1359932400000, 38.1],
                [1360018800000, 38.51],
                [1360105200000, 38.4],

                [1360278000000, 39.12],
                [1360537200000, 38.64],
                [1360623600000, 38.89],
                [1360710000000, 38.81],

                [1360882800000, 39.63],
                [1361228400000, 40.99],
                [1361314800000, 41.77],
                [1361401200000, 42.34],
                [1361487600000, 44.55],
                [1361746800000, 41.11],
                [1361833200000, 40.59],
                [1361919600000, 39.6],
            ],
        },
    ])
    const [options, setOptions] = useState<ApexOptions>({
        chart: {
            id: 'area-datetime',
            type: 'area',
            zoom: {
                type: 'x',
                enabled: true,
                autoScaleYaxis: true,
            },
            toolbar: {
                show: true,
                tools: {
                    download: false,
                    selection: true,
                    zoom: true,
                    zoomin: true,
                    zoomout: true,
                    pan: false,
                    reset: false,
                },
            },
        },
        dataLabels: {
            enabled: false,
        },
        xaxis: {
            type: 'datetime',
            tickAmount: 4,
            tickPlacement: 'on',
            axisTicks: {
                show: false,
            },
            axisBorder: {
                show: false,
            },
            labels: {
                style: {
                    colors: 'rgba(143, 143, 143, 1)',
                    fontSize: '10px',
                    fontFamily: 'TT Octosquares',
                },
            },
        },
        yaxis: {
            tickAmount: 4,
            decimalsInFloat: 0,
            forceNiceScale: true,

            labels: {
                style: {
                    colors: 'rgba(143, 143, 143, 1)',
                    fontSize: '14px',
                    fontFamily: 'TT Octosquares',
                },
            },
        },
        tooltip: {
            theme: 'dark',
            x: {
                format: 'dd MMM yyyy',
            },
            marker: {
                show: false,
            },
        },
        grid: {
            borderColor: '#2E3656',
            xaxis: {
                lines: {
                    show: false,
                },
            },
        },
        stroke: {
            fill: {
                type: 'gradient',
                gradient: {
                    type: 'horizontal',
                    colorStops: [
                        [
                            {
                                offset: 0,
                                color: 'rgba(0, 234, 242, 1)',
                                opacity: 1,
                            },

                            {
                                offset: 99,
                                color: 'rgba(218, 9, 217, 1)',
                                opacity: 1,
                            },
                        ],
                    ],
                },
            },
        },
        fill: {
            type: 'gradient',
            gradient: {
                shadeIntensity: 1,
                type: 'vertical',
                colorStops: [
                    [
                        {
                            offset: 0,
                            color: 'rgb(234, 0, 213)',
                            opacity: 0.7,
                        },
                        {
                            offset: 99,
                            color: 'rgb(234, 0, 213)',
                            opacity: 0,
                        },
                    ],
                ],
            },
        },
    })

    const updateData = (timeline: ChartZoomSelectionType) => {
        if (timeline === 'ONE_MONTH') {
            setOptions((prev) => {
                return {
                    ...prev,
                    xaxis: {
                        ...prev.xaxis,
                        min: new Date('28 Jan 2013').getTime(),
                        max: new Date('27 Feb 2013').getTime(),
                    },
                }
            })
        }

        if (timeline === 'ONE_YEAR') {
            setOptions((prev) => {
                return {
                    ...prev,
                    xaxis: {
                        ...prev.xaxis,
                        min: new Date('27 Feb 2012').getTime(),
                        max: new Date('27 Feb 2013').getTime(),
                    },
                }
            })
        }

        if (timeline === 'ONE_WEEK') {
            setOptions((prev) => {
                return {
                    ...prev,
                    xaxis: {
                        ...prev.xaxis,
                        min: new Date('20 Feb 2013').getTime(),
                        max: new Date('27 Feb 2013').getTime(),
                    },
                }
            })
        }

        if (timeline === 'ONE_DAY') {
            setOptions((prev) => {
                return {
                    ...prev,
                    xaxis: {
                        ...prev.xaxis,
                        min: new Date('26 Feb 2013').getTime(),
                        max: new Date('27 Feb 2013').getTime(),
                    },
                }
            })
        }

        if (timeline === 'ALL') {
            setOptions((prev) => {
                return {
                    ...prev,
                    xaxis: {
                        ...prev.xaxis,
                        min: undefined,
                        max: undefined,
                    },
                }
            })
        }
    }

    useEffect(() => {
        if (range) updateData(range)
    }, [range])

    return (
        <div>
            <Chart
                options={options}
                series={series}
                type="area"
                width={width}
                height={height}
            />
        </div>
    )
}

export default AreaChart
